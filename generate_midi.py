from music21 import *

def id_to_ascii(id_piece: list, dictionary: dict) -> list:
	"""
	Turn a generated piece of ids into a piece of ASCIIs
	:param id_piece: a piece generated by the model in id form
	:param dictionary: a dictionary mapping id to ASCII
	:return: a list of ascii characters
	"""
	ascii_piece = [dictionary[id] for id in id_piece]
	return ascii_piece


def id_to_duration(id_durations: list, dictionary: dict) -> list:
	"""
	Turn a generated list of duratino ids into a list of durations
	:param id_durations: a list of durations by the model in id form
	:param dictionary: a dictionary mapping id to duration
	:return: a list of durations
	"""
	durations = [dictionary[id] for id in id_durations]
	return durations

def ascii_to_m21(notes, durations):
	# can i assume start, stop, and pad are in neither notes nor durations?
	for i, chord in enumerate(notes):
		if len(chord) > 1:
			chord = note.Chord()
			split = list(chord)
			for note in split:
	pass


def make_midi():
	"""
	Combines notes and duration and makes the midi file.
	:return:
	"""
	pass

